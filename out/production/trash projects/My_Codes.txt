------------------------------------------------------MY JAVA CODES ----------------------------------------------------------



-------------------------------------------------------------------------------------------------------------------------------


package Core_Java;
// DATATYPES USED IN JAVA
public class Data_Types_In_Java {
    public static void main(String[] args){
        byte age = 127;
        short age2 = 3423;
        int age3 = 89358;
        long agedino = 2342342094L;
        char ch ='a';
        boolean b = true;
        float num = 24234232.234243f;
        double frac = 32424.433d;

        System.out.println(age);
        System.out.println(age2);
        System.out.println(age3);
        System.out.println(agedino);
        System.out.println(ch);
        System.out.println(b);
        System.out.println(num);
        System.out.println(frac);

    }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;
import java.util.Scanner;

// TAKING USER INPUT IN JAVA
// ADDITION OF TWO USER INPUTS IN JAVA
// CHECKING THE USER INPUT IS OF SPECIFIC DATA TYPE
// STORING DATA IN STRING
public class User_Input {
    public static void main(String[] args){
        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter a number 1 :");
//        int a = sc.nextInt();
//
//        System.out.println("Enter a number 2 :");
//        int b = sc.nextInt();
//
//        int sum = a + b;
//        System.out.println("The sum of the given numbers is : " + sum);
//
//        boolean b1 = sc.hasNextInt();  //hasNext is used to check the user input is of specific data type for validation
//        System.out.println(b1);

        System.out.println("Enter a sentence : ");
//        String str = sc.next();    //used to store a single word in string
        String str = sc.nextLine();  //used to store a sentence in string
        System.out.println(str);


    }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;
import java.util.Scanner;
public class Java_Exercise_1 {
    public static void main(String[]args) {
        Scanner sc = new Scanner(System.in);
        System.out.println("Enter your Physics marks : ");
        byte physics = sc.nextByte();
        System.out.println("Enter your Hindi marks : ");
        byte hindi = sc.nextByte();
        System.out.println("Enter your Maths marks : ");
        byte maths = sc.nextByte();
        System.out.println("Enter your Chemistry marks : ");
        byte chemistry = sc.nextByte();
        System.out.println("Enter your English marks : ");
        byte english = sc.nextByte();

        float percentage = (physics+hindi+english+chemistry+maths)/500f * 100;

        if(percentage > 100){
            System.out.println("You have Entered wrong marks, Please retry with correct marks.");
        }
        if(percentage > 30 && percentage < 100) {
            System.out.println("You have obtained " + percentage + "% and you are promoted !");
        }
        if(percentage < 30 && percentage > 0){
            System.out.println("You have obtained " + percentage + "%  and you are failed '_'");
        }
    }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Practise_Set_1 {
    public static void main(String[] args) {
//        First
//        Write a program to sum three numbers in Java.
//        int x = 3 , y = 9 , z = 10 ;
//        int sum = x+y+z;
//        System.out.print("The sum of these numbers is : ");
//        System.out.println(sum);


//        Second
//        Write a program to calculate CGPA using marks of three subjects (out of 100)
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter your Physics marks : ");
//        byte physics = sc.nextByte();
//        System.out.println("Enter your chemistry marks : ");
//        byte chemistry = sc.nextByte();
//        System.out.println("Enter your Maths marks : ");
//        byte maths = sc.nextByte();
//
//        float cgpa = (maths+chemistry+physics)/300f * 100;
//
//        if(cgpa > 100) {
//            System.out.println("You have Entered wrong marks, Please retry with correct marks.");
//        }
//         else {
//                System.out.println("You obtained " + cgpa +" cgpa.");
//              }


//        Third
//        Write a Java program that asks the user to enter his/her name
//        and greets them with “Hello <name>, have a good day” text.
//        System.out.println("Enter your name here : ");
//        Scanner sc = new Scanner(System.in);
//        String name = sc.nextLine();
//        System.out.println("Hello "+ name +", have a good day :) ");


//        fourth
//        Write a Java program to convert Kilometers to miles.
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter the kilometer/s you want to convert into miles : ");
//        short km = sc.nextShort();
//        double miles =  km * 0.621371d;
//        System.out.println(miles);


//        fifth
//        Write a Java program to detect whether a number entered by the
//        user is an integer or not.
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter a number you want to check is integer or not : ");
//        boolean b1 = sc.hasNextInt();
//        if(b1){
//            System.out.println("The value entered is an integer");
//        }
//        else{
//            System.out.println("The value entered is not an integer");
//        }
    }
}


-------------------------------------------------------------------------------------------------------------------------------


package Core_Java;

public class Logical_Operators {
    public static void main(String[] args) {
        boolean a = true;
        boolean b = false;

//        System.out.println("For Logical AND...");//Logical AND returns true when all cases are true
//        if (a && b){
//            System.out.println("Y");
//        }
//        else{
//            System.out.println("N");
//        }


//        System.out.println("For Logical OR...");//Logical OR returns true when one or more cases are true

//        if (a || b){
//            System.out.println("Y");
//        }
//        else{
//            System.out.println("N");
//        }


//        System.out.println("For Logical NOT");//Logical NOT Changes/Inverts true to false and vice versa!

//        System.out.print("Not(a) is ");
//        System.out.println(!a);
//        System.out.print("Not(b) is ");
//        System.out.println(!b);

    }
}


-------------------------------------------------------------------------------------------------------------------------------


package Core_Java;
import java.util.Scanner;

public class String_And_Its_methods {
    public static void main(String[] args) {
        // String name = new String("Harry");
        // String name = "Harry";
        // System.out.print("The name is: ");
        // System.out.print(name);
//        int a = 6;
//        float b = 5.6454f;
//        System.out.printf("The value of a is %d and value of b is %8.2f", a, b);
        // in above line 8 is used for 8 total space used and if not enough data available then
        // blank spaces are used and 2 denotes number of decimals to print :"     5.64"
        //System.out.format("The value of a is %d and value of b is %f", a, b);
//        Scanner sc = new Scanner(System.in);
//        String st = sc.next(); //used to scan only first input word
//        String st = sc.nextLine();// used to scan entire input Sentence
//        System.out.println(st);

       //String Methods
          String name = "Harsh";
//        System.out.println(name);
//        int value = name.length();// Returns the integer value of Character used in a string!
//        System.out.println(value);
//
//        String lstring = name.toLowerCase();// Returns another string with all words in LowerCase
//        System.out.println(lstring);
//
//        String ustring = name.toUpperCase();// Returns another string with all words in UpperCase
//        System.out.println(ustring);

//        String nonTrimmedString = "    Harsh    ";
//        System.out.println(nonTrimmedString);
//        String trimmedString = nonTrimmedString.trim();// Returns another String with no useless blank spaces
//        System.out.println(trimmedString);

//        System.out.println(name.substring(2));// Return a substring from start to the end
        // same substring (3) returns "sh" NOTE that index starts from 0
//        System.out.println(name.substring(1,3));// Returns a substring form start index to the end index.
        //Start index is included and end index is excluded

//        System.out.println(name.replace('H','D'));//Returns a new String after replacing (all) H with D Darsh
//        is returned in this case (NOTE : Case Sensitivity is being utilized in this method)
//        System.out.println(name.replace("Har","HELL"));//Returns a new String after replacing Har with HELL
//        HELLsh is returned in this case (NOTE : Case Sensitivity is being utilized in this method)

//        System.out.println(name.startsWith("Har"));//Returns boolean Expression by checking if the given String
        // starts with the following characters
//        System.out.println(name.endsWith("sh"));// Returns boolean Expression by checking if the given String
        // ends with the following characters

//        System.out.println(name.charAt(1));// Returns the character at given index

//        System.out.println(name.indexOf('r'));//Returns the index of a given Strings first occurrence of that char

//         String newname = "Harsharsh";
//         System.out.println(newname.indexOf("arsh",4));//Returns the index of a given String starting with  given
        // index number starting form 0
//        System.out.println(newname.lastIndexOf("arsh"));//Returns the index of a given String starting form
        // last character
//        System.out.println(newname.lastIndexOf("arsh", 4));//Returns the index of a given String starting
        // with given index number starting form last character
//        System.out.println(name.equals("Harsh"));//This method is case sensitive
//          System.out.println(name.equalsIgnoreCase("hARsh"));//This method does not check cases

//      Escape Sequence Characters
//        System.out.println("Escape Sequence Characters \" ");//used to print "
//        System.out.println("Escape Sequence Characters \\ ");//used to print /
//        System.out.println("Escape Sequence Characters \t abcd");//used to print tab spaces ( 3 spaces)
        // Every Escape Sequence Character in Java:

        /*
        \t	Insert a tab in the text at this point.
        \b	Insert a backspace in the text at this point.
        \n	Insert a newline in the text at this point.
        \r	Insert a carriage return in the text at this point.
        \f	Insert a form feed in the text at this point.
        \'	Insert a single quote character in the text at this point.
        \"	Insert a double quote character in the text at this point.
        \\	Insert a backslash character in the text at this point.
         */
    }
}


-------------------------------------------------------------------------------------------------------------------------------


package Core_Java;

public class If_Else_Statements {
    public static void main(String[] args) {
        int a = 29;
        if (a > 18) {
            System.out.println("You can drive!");
        }
        else{
            System.out.println("You cannot drive!");
        }
//        else is optional in all languages
//        - Output : You can drive

//      If-else ladder :
//        - Instead of using multiple if statements, we can also use else if along with 
//          if thus forming an if-else-if-else ladder.
//        - Using such kind of logic reduces indents.
//        - Last else is executed only if all the conditions fail.


/* if (condition1) {
            //Statements;
}

else if {
            // Statements;
}

else {
            //Statements
} */
      }
    }



-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Increment_And_Decrement_Operators {
    public static void main(String[] args) {
        /* byte x = 5;
        int y = 6;
        short z = 8;
        int a = y + z;
        float b = 6.54f + x;
        System.out.println(b);
        */

        // Increment and Decrement Operators
        int i = 56;
        // int b = i++; // first b is assigned i (56) then i is incremented
        int j = 67;
        int c = ++j; // first j is incremented then c is assigned j (68)
        System.out.println(i++);
        System.out.println(i);
        System.out.println(++i);
        System.out.println(i);
        int y = 7;
        System.out.println( ++y *8);
        char ch = 'a';
        System.out.println(++ch);
    }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Practise_Set_2 {
    public static void main(String[] args) {

//     Problem 1
//        What will be the result of the following expression:
//        float a = 7/4 * 9/2
//        float a = 7/4.0f * 9/2.0f;
//        System.out.println(a);
//
//        Problem 2
//        Write a java program to encrypt a grade by
//        adding 8 to it. Decrypt it to show the correct grade.
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter you Grade : ");
//        char grade = sc.next().charAt(0);
//        //Encrypting the grade...
//        grade = (char)(grade + 8);
//        System.out.println("Your Encrypted Grade is : "+grade);
//        // Decrypting the grade...
//        grade = (char)(grade - 8);
//        System.out.println("Your Decrypted Grade is : "+grade);
//
//        Problem 3
//        Use comparison operators to find out whether a given number is greater
//        than the user entered number or not?
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter a number to compare from given number :");
//        int a = 50;
//        int num = sc.nextInt();
//        if (num > a) {
//            System.out.println("The number you entered is greater than the given number");
//        }
//        if (num <= a) {
//            System.out.println("The number you entered is smaller than or equals the given number");
//        }

//        Problem 4
//        Write the following expression in a java program:
//        (v^2-u^2)/2as
//        int v = 5;
//        int u = 2;
//        int a = 4;
//        int s = 5;
//        int sol = (v*v - u*u) / (2*a*s);
//        System.out.println("Result is "+sol);

//        Problem 5
//        Find the value of 'a' in expression given below :
//        int x =7;
//        int a = 7*49/7 + 35/7;
//        System.out.println(a);


    }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;
import java.util.Scanner;

public class Practise_Set_3 {
    public static void main(String[] args) {


//    Problem 1
        //Write a Java program to convert a string to lowercase.
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter the string you want to LowerCase : ");
//        String str = sc.nextLine();
//        str = str.toLowerCase();
//        System.out.println(str);


//    Problem 2
        //Write a Java program to replace spaces with underscores.(can also be used to
        //convert to PascalConvention...
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter the string : ");
//        String str = sc.nextLine();
//        str = str.replace(' ','_');
//        System.out.println(str);


//    Problem 3
        //Write a Java program to fill in a letter template which looks like below:
// letter = “Dear <|name|>, Thanks a lot”
// Replace <|name|> with a string (some name)
//        String str ="Dear <|name|>, Thanks a lot!";
//        str = str.replace("<|name|>","ME");
//        System.out.println(str);


//    Problem 4
        //Write a Java program to detect double and triple spaces in a string.
//        String str = "My  name  is    Harsh.";
//            System.out.println(str.indexOf("  "));
//            System.out.println(str.indexOf("   "));

//    Problem 5
        //Write a program to format the following letter using escape sequence characters.
        //       Letter = “Dear Harry, This Java Course is nice. Thanks”
//        System.out.println("\"Dear Harry,\n\tThis Java Course is nice.\n\tThanks\"");

    }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Operators {
    public static void main(String[] args) {
        // Arithmetic operators +,-,*,/,%,++.--
//         int a = 10;
//         int b = 3 % a;
//         4.8 % 1.1 --> Returns decimal remainder
//        System.out.println(b);


        //Assignment operators
//         int c = 3;
//           c += 9;
//         c *= 5;
//         c -= 5;
//         c /= 5;
//        System.out.println(c);


//       comparison operators
//        System.out.println(c == a);
//        System.out.println(c < a);
//        System.out.println(c > a);


//        logical operators
//        System.out.println(9 > 4 && 9 > 5);
//        System.out.println(9 > 4 || 9 > 12);
//        boolean x = true;
//        System.out.println("Not (x) is "+ !x);


//        bitwise operator
//        System.out.println(2 & 3);
//          10
//          11
//         +----
//          10 = 2
    }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Switch_Vs_ElseIf {
    public static void main(String[] args) {
        //Switch case is used when we have to make a choise between
        //number of alternatives for a given variable
        //(var) can be a String,integer and character in  java
        String var = "AOT";
        
        
//      Traditional Switch Statement (Requires break keyword)
//        switch (var) {
//            case "AOT":
//                System.out.println("Shinzo Sasageyo!!!");
//                break;
//            case "Demon Slayer":
//                System.out.println("Tanjiro");
//                break;
//            case "OnePunchMan":
//                System.out.println("Bald");
//                break;
//            default:
//                System.out.println("Defaulted");
//        }
        
        
//      Enhanced Switch Statement (Does not require break keyword)
//        switch (var) {
//            case "AOT" -> System.out.println("Shinzo Sasageyo!!!");
//            case "Demon Slayer" -> System.out.println("Tanjiro");
//            case "OnePunchMan" -> System.out.println("Bald");
//            default -> System.out.println("Defaulted");
//        }

        
        //Normal if else ladder :
//        System.out.println("Enter you age: ");
//        Scanner sc = new Scanner(System.in);
//        byte age = sc.nextByte();
//        if (age > 56) {
//            System.out.println("You are Very Experienced.");
//        } else if (age > 46) {
//            System.out.println("You are Experienced.");
//        } else if (age > 36) {
//            System.out.println("You are Semi Experienced.");
//        } else {
//            System.out.print("You are not Experienced. ");
//        }
//        if (age > 2 && age < 10) {
//            System.out.println("You are a baby!");
//        }
    }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Precedence_And_Associativity {
    public static void main(String[] args) {


//        Precedence & Associativity

        int a = 6 * 5 - 34 / 2;

//        Highest precedence goes to * and /. They are then evaluated on the basis
//        of left to right associativity
//            =30-34/2
//            =30-17
//            =13

        int b = 60 / 5 - 34 * 2;

//            = 12-34*2
//            =12-68
//            =-56

        System.out.println(a);
        System.out.println(b);
    }
}


-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

import java.util.Scanner;

public class Practise_set_4 {
    public static void main(String[] args) {

//        Problem 1
//        What will be the output of this program

//        int a = 10;
//        if (a = 11)
//            System.out.println(“I am 11”);
//        else
//            System.out.println(“I am not 11”);
        // Output = I am not 11


//        Problem 2
//        Write a program to find out whether a student is pass or fail;
//        if it requires a total of 40% and at least 33% in each subject to pass.
//        Assume 3 subjects and take marks as input from the user.
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter your Physics marks out of 100 : ");
//        byte physics = sc.nextByte();
//        System.out.println("Enter your Maths marks out of 100 : ");
//        byte maths = sc.nextByte();
//        System.out.println("Enter your Chemistry marks out of 100 : ");
//        byte chemistry = sc.nextByte();
//
//        float Percentage = (physics + chemistry + maths) / 300f * 100;
//
//        if (physics < 33) {
//            System.out.println("You have obtained " + Percentage + "% and you have failed in Physics");
//        } else if (maths < 33) {
//            System.out.println("You have obtained " + Percentage + "% and you have failed in Maths");
//        } else if (chemistry < 33) {
//            System.out.println("You have obtained " + Percentage + "% and you have failed in Chemistry");
//        } else if (Percentage > 100) {
//            System.out.println("You have Entered wrong marks please try again with correct marks!");
//        } else if (Percentage < 40) {
//            System.out.println("You have failed and your Percentage score was :" + Percentage + "%");
//        } else {
//            System.out.println("Congratulations you have passed with " + Percentage + "%");
//        }


//        Problem 3
//        Calculate income tax paid by an employee to the government as per the slabs mentioned below:
//        Income Slab     Tax
//        2.5 - 5.0 L     5 %
//        5.0 - 10.0 L    20 %
//        Above 10.0 L    30 %

//        System.out.println("----Income Tax Calculator----");
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter your income in per Year in Rupees :");
//        float tax = 0;
//        float income = sc.nextFloat();
//        if (income <= 250000f) {
//            tax = tax + 0;
//            System.out.println("You do not come under tax slab.");
//        } else if (income > 250000f && income <= 500000f) {
//            tax = tax + 0.05f * (income - 250000);
//            System.out.println("The total tax paid by the employee is: " + tax + " Rupees.");
//        } else if (income > 500000f && income <= 1000000f) {
//            tax = tax + 0.05f * (500000f - 250000f);
//            tax = tax + 0.2f * (income - 5f);
//            System.out.println("The total tax paid by the employee is: " + tax + " Rupees.");
//        } else if (income > 1000000f) {
//            tax = tax + 0.05f * (500000f - 250000f);
//            tax = tax + 0.2f * (1000000f - 500000f);
//            tax = tax + 0.3f * (income - 1000000f);
//            System.out.println("The total tax paid by the employee is: " + tax + " Rupees.");
//        }


//        Problem 4
//        Write a Java program to find out the day of the week given the number
//        [1 for Monday, 2 for Tuesday … and so on!]

//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter the number for the day in week : \n (Example - 1 = Monday and so on)");
//        char num = sc.next().charAt(0);
//        switch (num) {                                          //Using Enhanced Switch
//            case '1' -> System.out.println("It's Monday.");
//            case '2' -> System.out.println("It's Tuesday.");
//            case '3' -> System.out.println("It's Wednesday.");
//            case '4' -> System.out.println("It's Thursday.");
//            case '5' -> System.out.println("It's Friday.");
//            case '6' -> System.out.println("It's Saturday.");
//            case '7' -> System.out.println("It's Sunday.");
//        }


//        Problem 5
//        Write a Java program to find whether a year entered by the user is a leap year or not.

//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter a Year you want to check is Leap Year or not :");
//        short year = sc.nextShort();
//        if (year % 4 == 0 && 100 % year != 0) {
//            System.out.println("The year " + year + " is a leap year.");
//        } else if (year % 400 == 0) {
//            System.out.println("The year " + year + " is a leap year.");
//        } else {
//            System.out.println("The year " + year + " is not a leap year.");
//        }


//        Problem 6
//        Write a program to find out the type of website from the URL:
//-       .com – commercial website
//-       .org – organization website
//-       .in – Indian website

//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter the website name :");
//        String site = sc.nextLine();
//
//        if (site.endsWith("org")) {
//            System.out.println(site + " is a Organizational website.");
//        } else if (site.endsWith("com")) {
//            System.out.println(site + " is a Commercial website.");
//        } else if (site.endsWith("in")) {
//            System.out.println(site + " is a Indian website.");
//        }
        
    }
}


-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Loops {
    public static void main(String[] args) {

//        WHILE LOOP :


//        System.out.println("Using Loops:");
//        int i = 1;
//        while (i <= 20) {
//            System.out.println(i);
//            i++;
//        }
//        System.out.println("Finished Running While Loop!");

//        while (true) {
//            System.out.println("I am an infinite while loop!");
//        }


//       DO WHILE LOOP :

        //        int a = 0;
//        while(a<5){
//            System.out.println(a);
//            a++;
//        }

        //Do while is guaranteed to run at least once and then checks the condition
        // it runs code first and then checks the condition
//        int b = 10;
//        do {
//            System.out.println(b);
//            b++;
//        } while (b < 5);

//        int c = 1;
//        do {
//            System.out.println(c);
//            c++;
//        } while (c <= 45);


//       FOR WHILE LOOP :
//        for (int i=1; i<=10; i++){
//            System.out.println(i);
//        }
//         2i = Even Numbers = 0, 2, 4, 6, 8
//         2i+1 = Odd Numbers = 1, 3, 5, 7, 9
//        int n = 3;
//        for (int i =0; i<n; i++){
//            System.out.println(2*i+1);
//        }

//        for (int i = 5; i != 0; i--) {
//            System.out.println(i);
//        }


    }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

import java.util.Random;
import java.util.Scanner;

//Create a simple Rock, Paper Scissors game in Java. (#Use Conditional Statements)

public class Java_Exercise_2 {
    public static void main(String[] args) {
        System.out.println("Press Y to play Rock, Paper, Scissor!!!");
        Scanner sc = new Scanner(System.in);
        char play = sc.next().charAt(0);
        if (play == 'Y' || play == 'y') {
            byte cpu_score = 0;
            byte player_score = 0;
            System.out.println("Instructions -- 0 for Rock , 1 for Paper , 2 for Scissor.\n the best of 5 matches win !");
            for (int i = 0; i < 5; i++) {

                System.out.println(" \n Enter Your Play : ");

                byte UserInput = sc.nextByte();
                Random chance = new Random();
                int ComputerInput = chance.nextInt(3);

                if (UserInput == ComputerInput) {
                    System.out.println("It's a draw!");
                    System.out.println("The user selected : " + UserInput);
                    System.out.println("The computer selected : " + ComputerInput);
                } else if (UserInput == 0) {
                    if (ComputerInput == 1) {
                        System.out.println("CPU wins!");
                        cpu_score += 1;
                    } else {
                        System.out.println("Player wins!");
                        player_score += 1;
                    }
                    System.out.println("The user selected : " + UserInput);
                    System.out.println("The computer selected : " + ComputerInput);

                } else if (UserInput == 1) {
                    if (ComputerInput == 2) {
                        System.out.println("CPU wins!");
                        cpu_score += 1;
                    } else {
                        System.out.println("Player wins!");
                        player_score += 1;
                    }
                    System.out.println("The user selected : " + UserInput);
                    System.out.println("The computer selected : " + ComputerInput);

                } else if (UserInput == 2) {
                    if (ComputerInput == 0) {
                        System.out.println("CPU wins!");
                        cpu_score += 1;
                    } else {
                        System.out.println("Player wins!");
                        player_score += 1;
                    }
                    System.out.println("The user selected : " + UserInput);
                    System.out.println("The computer selected : " + ComputerInput);
                }


            }
            if (cpu_score > player_score) {
                System.out.println("\n CPU won the match! try again..");
            }
            if (player_score > cpu_score) {
                System.out.println("\n Congratulations You won the match!!!");
            }
            if (cpu_score == player_score) {
                System.out.println("\n The match is tied !");
            }
        } else {
            System.out.println("Have a nice day !");
        }
    }
}



-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Practise_Set_5 {
    public static void main(String[] args) {
//        Problem 1:
//        Write a program to print the following pattern :
//        ****
//        ***
//        **
//        *
//        int n = 4;
//        for (int i = n; i > 0; i--) {
//            for (int j = 0; j < i; j++) {
//                System.out.print("*");
//            }
//            System.out.print("\n");
//        }


//        Problem 2
//        Write a program to sum first n even numbers using a while loop.
//        int i = 4;
//        int sum = 0;
//        for (int n = 0; n < i; n++) {
//            sum = sum + (2 * n);
//        }
//        System.out.print("The sum of first " + i + " even numbers are : ");
//        System.out.println(sum);


//        Problem 3
//        Write a program to print the multiplication table of a given number n.
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter the number whose table you want : ");
//        int n = sc.nextInt();
//        System.out.println("The table of " + n + " is :");
//        for (int i = 1; i <= 10; i++) {
//            System.out.print(n + " * " + i + " = ");
//            System.out.println(n * i);
//        }


//        Problem 4
//        Write a program to print a multiplication table of 10
//        Write a program to print the multiplication table of a
//        given number 'n' in reverse order.

//        System.out.println("The table of 10 is :");
//        for (int i = 1; i <= 10; i++) {
//            System.out.print(10 + " * " + i + " = ");
//            System.out.println(10 * i);
//        }

//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter the number whose Reverse table you want : ");
//        int n = sc.nextInt();
//        System.out.println("The Reverse table of " + n + " is :");
//        for (int i = 10; i >= 1; i--) {
//            System.out.print(n + " * " + i + " = ");
//            System.out.println(n * i);
//        }


//        Problem 5
//        Write a program to find the factorial of a given number using for loops.

//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter a number you want factorial for :");
//        long n = sc.nextLong();
//        long factorial = 1;
//        System.out.print("The factorial of " + n + " is : ");
//        for (long i = 1; i <= n; i++) {
//            factorial = factorial * i;
//        }
//        System.out.println(factorial);


//        Problem 6
//        Repeat problem 5 using a while loop.
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter a number you want factorial for :");
//        long n = sc.nextLong();
//        long factorial = 1, i = 0;
//        System.out.print("The factorial of " + n + " is : ");
//        while (i < n) {
//            i++;
//            factorial = factorial * i;
//        }
//        System.out.print(factorial);


//        Problem 7
//        Repeat problem 1 using for/while loop.

//        int n = 4;
//        int i = n, j;
//        while (i > 0) {
//            j = 0;
//            while (j++ < i) {
//                System.out.print("*");
//            }
//            System.out.println();
//            i--;
//        }


//        Problem 8
//        Write a program to calculate the sum of the numbers
//        occurring in the multiplication table of 8.
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter the number whose sum of table you want : ");
//        int n = sc.nextInt();
//        int sum = 0;
//        for (int i = 1; i <= 10; i++) {
//            sum += (n * i);
//        }
//        System.out.println("The sum of all the numbers of table of " + n + " is :");
//        System.out.println(sum);


    }
}


-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Arrays {
    public static void main(String[] args) {
//        Classroom of 500 students - You have to store marks of these 500 students
//        You have 2 options:
//        1. Create 500 variables
//        2. Use Arrays (recommended)

        // There are three main ways to create an array in Java
        // 1. Declaration and memory allocation
        // int [] marks = new int[5];

        // 2. Declaration and then memory allocation
        // int [] marks;
        // marks = new int[5];
        // Initialization
        // marks[0] = 100;
        // marks[1] = 60;
        // marks[2] = 70;
        // marks[3] = 90;
        // marks[4] = 86;

        // 3. Declaration, memory allocation and initialization together
        int[] marks = {98, 45, 79, 99, 80};

        // marks[5] = 96; - throws an error
        System.out.println(marks[4]);
        
        /*
        float [] marks = {98.5f, 45.5f, 79.5f, 99.5f, 80.5f};
        String [] students ={"Harry", "Rohan", "Shubham", "Lavish"};
        System.out.println(students.length);
        System.out.println(students[2]);
        */

        int[] marks = {98, 45, 79, 99, 80};
        // System.out.println(marks.length);

        // Displaying the Array (Naive way)
        System.out.println("Printing using Naive way");
        System.out.println(marks[0]);
        System.out.println(marks[1]);
        System.out.println(marks[2]);
        System.out.println(marks[3]);
        System.out.println(marks[4]);

        // Displaying the Array (for loop)
        System.out.println("Printing using for loop");
        for (int i = 0; i < marks.length; i++) {
            System.out.println(marks[i]);
        }

        // Quick Quiz: Displaying the Array in Reverse order (for loop)
        System.out.println("Printing using for loop in reverse order");
        for (int i = marks.length - 1; i >= 0; i--) {
            System.out.println(marks[i]);
        }

        // Quick Quiz: Displaying the Array (for-each loop)
        System.out.println("Printing using for-each loop");
        for (int element : marks) {
            System.out.println(element);
        }
    }
    
    //        MULTIDIMENSIONAL ARRAYS :
    //        int [] mark; // A 1-D Array
        int[][] flats; // A 2-D Array
        flats = new int[2][3];
        flats[0][0] = 101;
        flats[0][1] = 102;
        flats[0][2] = 103;
        flats[1][0] = 201;
        flats[1][1] = 202;
        flats[1][2] = 203;

        // Displaying the 2-D Array (for loop)
        System.out.println("Printing a 2-D array using for loop");
        for (int i = 0; i < flats.length; i++) {
            for (int j = 0; j < flats[i].length; j++) {
                System.out.print(flats[i][j]);
                System.out.print(" ");
            }
            System.out.println("");
        }
}

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

import java.util.Scanner;

public class Practise_Set_6 {
    public static void main(String[] args) {
        //Problem 1
//        Create an array of 5 floats and calculate their sum.
//        float sum = 0;
//        float arr[] = {5.7f, 2.5f, 8.4f, 5.6f, 1.0f};
//        for (int i = 0; i < arr.length; i++) {
//            sum += arr[i];
//        }
//        System.out.println("The sum of the array is : " + sum);


               //Problem 2
//        Write a program to find out whether a given integer is present in an array or not.
//        Scanner sc = new Scanner(System.in);
//        int[] arr = {1, 2, 3, 4};
//        System.out.println("Enter a number you want to check is in array or not : ");
//        int n = sc.nextInt();
//        boolean isInArray = false;
//        for (int i = 0; i < arr.length; i++) {
//            if (n == arr[i]) {
//                isInArray = true;
//                break;
//            }
//        }
//        if (isInArray) {
//            System.out.println("The value " + n + " is present in the array");
//        } else {
//            System.out.println("The value " + n + " is not present in the array");
//        }

        //Problem 3
//        Calculate the average marks from an array containing marks of all students in physics
//        using a for-each loop.
//        float[] marks = {78.0f, 88.0f, 57.0f, 77.0f, 62.0f};
//        int i = marks.length;
//        float sum = 0.0f;
//        float average = 0.0f;
//        for (int n = 0; n < i; n++) {
//            sum += marks[n];
//            average = sum / i;
//        }
//        System.out.println("The average marks is : " + average);


       //Problem 4
//        Create a Java program to add two matrices of size 2x3.
//        int a[][] = {{1, 3, 4},
//                     {2, 4, 3}};
//        int b[][] = {{1, 3, 4},
//                     {2, 4, 3}};
//        int[][] c = new int[2][3];
//
//        for (int i = 0; i < a.length; i++) {
//            for (int j = 0; j < a[i].length; j++) {
//                c[i][j] = a[i][j] + b[i][j];
//                System.out.print(c[i][j] + " ");
//            }
//            System.out.println();
//        }

        //Problem 5
//       Write a Java program to reverse an array.
//        int[] a = {1, 2, 3, 4, 5};
//        int l = a.length;
//        int n = Math.floorDiv(l, 2);
//        int temp;
//
//        System.out.println("Original Array : ");
//        for (int i = 0; i < l; i++) {
//            System.out.print(a[i] + " ");
//        }
//        System.out.println();
//        
//        System.out.println("Reversed Array : ");
//
//        for (int i = 0; i < n; i++) {
//            temp = a[i];
//            a[i] = a[l - i - 1];
//            a[l - i - 1] = temp;
//        }
//        for (int element : a) {
//            System.out.print(element + " ");
//        }


        //Problem 6
//        Write a Java program to find the maximum and minimum element in an array.
//        int[] a = {23, 453, 234, 564, 4, -3, 65, 843};
//        int max = Integer.MIN_VALUE;
//        int min = Integer.MAX_VALUE;
//        for (int i = 0; i < a.length; i++) {
//            if (a[i] > max) {
//                max = a[i];
//            } else if (a[i] < min) {
//                min = a[i];
//            }
//        } 
//        System.out.println("The maximum element of array is " + max);
//        System.out.println("The minimum element of array is " + min);


         //Problem 7
//        Write a Java program to find whether an array is sorted or not.
//        Scanner sc = new Scanner(System.in);
//        System.out.println("Enter 5 elements in array : ");
//        int a = sc.nextInt();
//        int b = sc.nextInt();
//        int c = sc.nextInt();
//        int d = sc.nextInt();
//        int e = sc.nextInt();
//        boolean isSorted = true;
//        int[] arr = {a, b, c, d, e};
//        for (int i = 0; i < arr.length - 1; i++) {
//            if (arr[i] > arr[i + 1]) {
//                isSorted = false;
//                break;
//            }
//        }
//        if (isSorted) {
//            System.out.println("The Array is sorted");
//        } else {
//            System.out.println("The Array is not sorted");
//        }

-------------------------------------------------------------------------------------------------------------------------------

package Core_Java;

public class Methods {
    //    what is methods and why we use them?
//    Sometimes our program grows in size, and we want to separate the logic of main method to
//    other methods :
//    for instance - If we are calculating average of a number pair 5 times , we can use methods
//    to avoid repeating the logic.
//    Syntax of a method
//    static DataType name() {
    //Method body
//     }
//    A method can be called by -
//    class obj = new class();
//    obj.sum(a,b);

    public static void main(String[] args) {
        int a = 5;
        int b = 12;
        int c;
//       Method invocation using object creation:
//       Methods obj = new Methods();
//       c = obj.logic(a, b);
         c = logic(a, b);


        int m = 2;
        int n = 1;
        int o;
        o = logic(m, n);
        System.out.println(c);
        System.out.println(o);
    }

    static int logic(int x, int y) { //Copies of a and b will be stored in x and y and there initial values will never change by using methods
        int z;
        if (x > y) {
            z = x + y;
        } else {
            z = (x + y) * 5;
        }
        return z;
    }
    
}

-------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------------------------------------------------------------------------------------------


-------------------------------------------------------------------------------------------------------------------------------
